{"uid":"8371052ff7a0e269","name":"testGetNonExistentPlayerById","fullName":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById","historyId":"2f846b64ba850206c76976123e80fc7c","time":{"start":1728227028936,"stop":1728227029274,"duration":338},"description":"Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player","descriptionHtml":"<p>Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player</p>\n","status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setupClass","time":{"start":1728227028933,"stop":1728227028933,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player","status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[{"name":"Execute POST request to GET player by id","time":{"start":1728227028936,"stop":1728227029272,"duration":336},"status":"passed","steps":[],"attachments":[{"uid":"87843566d8f24f4c","name":"Request","source":"87843566d8f24f4c.html","type":"text/html","size":502},{"uid":"cc823268f4c30626","name":"HTTP/1.1 200 ","source":"cc823268f4c30626.html","type":"text/html","size":312}],"parameters":[{"name":"id","value":"2207560857105021275"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Assert response HTTP Status code is: 404","time":{"start":1728227029272,"stop":1728227029273,"duration":1},"status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[{"name":"assertThat '200'","time":{"start":1728227029272,"stop":1728227029272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"as 'Verify status code is 404 []'","time":{"start":1728227029273,"stop":1728227029273,"duration":0},"status":"passed","steps":[{"name":"describedAs 'Verify status code is 404'","time":{"start":1728227029273,"stop":1728227029273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"isEqualTo '404'","time":{"start":1728227029273,"stop":1728227029273,"duration":0},"status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"response","value":"io.restassured.internal.ValidatableResponseImpl@7469a371"},{"name":"expectedStatusCode","value":"404"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"package","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"testClass","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"testMethod","value":"testGetNonExistentPlayerById"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"host","value":"fv-az1109-973"},{"name":"thread","value":"2241@fv-az1109-973.TestNG-test=Surefire test-2(16)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"tag","value":"NEGATIVE"},{"name":"story","value":"API consumer is able to get Player"},{"name":"epic","value":"Player service implementation"},{"name":"feature","value":"Get Player"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"PS-12347","type":"issue"},{"name":"PS-318","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"e05feca5c932a6f6","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/28//#testresult/e05feca5c932a6f6","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728225014033,"stop":1728225014391,"duration":358}},{"uid":"8f9b46aab2d62be7","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/27//#testresult/8f9b46aab2d62be7","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728223681907,"stop":1728223682127,"duration":220}},{"uid":"4922e97dcff6a068","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/26//#testresult/4922e97dcff6a068","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728223658633,"stop":1728223658838,"duration":205}},{"uid":"9c98a2c49812c131","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/25//#testresult/9c98a2c49812c131","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728004019951,"stop":1728004020269,"duration":318}},{"uid":"81bec6d9bf8c5b1","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/24//#testresult/81bec6d9bf8c5b1","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728003784769,"stop":1728003784980,"duration":211}},{"uid":"1fe247c42d7b435d","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/23//#testresult/1fe247c42d7b435d","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728002761939,"stop":1728002762302,"duration":363}},{"uid":"49f1e45ca7c9ad6f","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/22//#testresult/49f1e45ca7c9ad6f","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728000386506,"stop":1728000386710,"duration":204}},{"uid":"788ceb162194ae2e","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/21//#testresult/788ceb162194ae2e","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1727991748312,"stop":1727991748510,"duration":198}},{"uid":"b8fcdc797f34d7f9","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/20//#testresult/b8fcdc797f34d7f9","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1727980938522,"stop":1727980938724,"duration":202}},{"uid":"d9e620c8703440ef","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/19//#testresult/d9e620c8703440ef","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1727978824176,"stop":1727978824510,"duration":334}}]},"tags":["NEGATIVE"]},"source":"8371052ff7a0e269.json","parameterValues":[]}