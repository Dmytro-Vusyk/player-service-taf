{"uid":"f6c3100d03f03f63","name":"testGetNonExistentPlayerById","fullName":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById","historyId":"2f846b64ba850206c76976123e80fc7c","time":{"start":1728358004163,"stop":1728358004399,"duration":236},"description":"Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player","descriptionHtml":"<p>Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player</p>\n","status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setupClass","time":{"start":1728358004159,"stop":1728358004160,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Verify that player controller api returns NOT_FOUND when GET operation is performed on non existent player","status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[{"name":"Execute POST request to GET player by id","time":{"start":1728358004164,"stop":1728358004397,"duration":233},"status":"passed","steps":[],"attachments":[{"uid":"306a049473d45490","name":"Request","source":"306a049473d45490.html","type":"text/html","size":502},{"uid":"4e4761b22b50d2c4","name":"HTTP/1.1 200 ","source":"4e4761b22b50d2c4.html","type":"text/html","size":312}],"parameters":[{"name":"id","value":"8430647677279996797"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Assert response HTTP Status code is: 404","time":{"start":1728358004398,"stop":1728358004398,"duration":0},"status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[{"name":"assertThat '200'","time":{"start":1728358004398,"stop":1728358004398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"as 'Verify status code is 404 []'","time":{"start":1728358004398,"stop":1728358004398,"duration":0},"status":"passed","steps":[{"name":"describedAs 'Verify status code is 404'","time":{"start":1728358004398,"stop":1728358004398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"isEqualTo '404'","time":{"start":1728358004398,"stop":1728358004398,"duration":0},"status":"failed","statusMessage":"[Verify status code is 404] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Verify status code is 404] \nexpected: 404\n but was: 200\n\tat com.companyname.assertions.TestAssertions.assertStatusCodeIs(TestAssertions.java:19)\n\tat com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests.testGetNonExistentPlayerById(GetPlayerByIdNegativeTests.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"response","value":"io.restassured.internal.ValidatableResponseImpl@3dd3e391"},{"name":"expectedStatusCode","value":"404"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"package","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"testClass","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"testMethod","value":"testGetNonExistentPlayerById"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.companyname.playerservice.functionaltests.get.GetPlayerByIdNegativeTests"},{"name":"host","value":"fv-az654-117"},{"name":"thread","value":"2182@fv-az654-117.TestNG-test=Surefire test-1(15)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"tag","value":"NEGATIVE"},{"name":"story","value":"API consumer is able to get Player"},{"name":"epic","value":"Player service implementation"},{"name":"feature","value":"Get Player"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"PS-12347","type":"issue"},{"name":"PS-318","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":48,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":48},"items":[{"uid":"9b8746e157cff239","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/34//#testresult/9b8746e157cff239","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728356014999,"stop":1728356015207,"duration":208}},{"uid":"7c443c2a67c851c5","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/33//#testresult/7c443c2a67c851c5","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728350796194,"stop":1728350796545,"duration":351}},{"uid":"b5494234d5ea71b2","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/32//#testresult/b5494234d5ea71b2","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728343120327,"stop":1728343120679,"duration":352}},{"uid":"31047cb5c3b798c","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/31//#testresult/31047cb5c3b798c","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728339554713,"stop":1728339554957,"duration":244}},{"uid":"7c803d5d98be7a6c","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/30//#testresult/7c803d5d98be7a6c","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728335929140,"stop":1728335929371,"duration":231}},{"uid":"9ed6b66dbc767832","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/29//#testresult/9ed6b66dbc767832","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728332529305,"stop":1728332529665,"duration":360}},{"uid":"caf0e5a66924b6e5","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/28//#testresult/caf0e5a66924b6e5","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728328520258,"stop":1728328520507,"duration":249}},{"uid":"757278679113791d","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/27//#testresult/757278679113791d","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728325532073,"stop":1728325532270,"duration":197}},{"uid":"bb162802bd9c261","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/26//#testresult/bb162802bd9c261","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728321481492,"stop":1728321481694,"duration":202}},{"uid":"eb8ad1202a72bc67","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/25//#testresult/eb8ad1202a72bc67","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728318258308,"stop":1728318258552,"duration":244}},{"uid":"ed54446a88ebfdfc","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/24//#testresult/ed54446a88ebfdfc","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728314458349,"stop":1728314458689,"duration":340}},{"uid":"6f65d63b0da74830","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/23//#testresult/6f65d63b0da74830","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728310726654,"stop":1728310726888,"duration":234}},{"uid":"4215e08bd4be3c02","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/22//#testresult/4215e08bd4be3c02","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728307634918,"stop":1728307635261,"duration":343}},{"uid":"92c8b0fde78ccc6d","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/21//#testresult/92c8b0fde78ccc6d","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728304760135,"stop":1728304760477,"duration":342}},{"uid":"f828d6abae9227e","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/20//#testresult/f828d6abae9227e","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728299907322,"stop":1728299907663,"duration":341}},{"uid":"55c030bd41506100","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/19//#testresult/55c030bd41506100","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728296510049,"stop":1728296510395,"duration":346}},{"uid":"cc315dc41373005b","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/18//#testresult/cc315dc41373005b","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728292916044,"stop":1728292916282,"duration":238}},{"uid":"31f7ba2c03c97ef2","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/17//#testresult/31f7ba2c03c97ef2","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728289548173,"stop":1728289548516,"duration":343}},{"uid":"66b4afed30d8b929","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/16//#testresult/66b4afed30d8b929","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728285555086,"stop":1728285555324,"duration":238}},{"uid":"56f7b4553d2b9be","reportUrl":"https://Dmytro-Vusyk.github.io/player-service-taf/15//#testresult/56f7b4553d2b9be","status":"failed","statusDetails":"[Verify status code is 404] \nexpected: 404\n but was: 200","time":{"start":1728282494799,"stop":1728282495040,"duration":241}}]},"tags":["NEGATIVE"]},"source":"f6c3100d03f03f63.json","parameterValues":[]}